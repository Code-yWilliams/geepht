name: Build and Publish Container Image to Dockerhub

on:
  workflow_call:
    inputs:
      docker_image:
        type: string
        required: true
      image_tags:
        type: string
        required: true
      dockerfile:
        type: string
        required: true
      docker_context:
        type: string
        required: true
      runner:
        type: string
        required: false
        default: ubuntu-20.04
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  build:
    name: Build and Publish Container Image
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 10

    steps:
      - name: Format Docker Tags
        shell: bash
        run: |
          IMAGE_TAGS=""
          for tag in $(echo "${{ inputs.image_tags }}" | tr ',' ' '); do
            IMAGE_TAGS="${IMAGE_TAGS},${{ inputs.docker_image }}:${tag}"
          done
          echo "DOCKER_TAGS=${IMAGE_TAGS:1}" >> $GITHUB_ENV

      - name: Checkout Branch
        uses: actions/checkout@v4

      # - name: Debug Environment Variables
      #   shell: bash
      #   run: printenv

      - name: "Test Secrets"
        env:
          GITHUB_SECRETS_AS_JSON: ${{ toJSON(secrets) }}
        shell: bash
        run: echo "$GITHUB_SECRETS_AS_JSON"

      # - name: Output Secrets
      #   shell: bash
      #   run: printenv
      #   # run: |
      #   #   for i in {1..10}; do
      #   #     echo "BAGEL"
      #   #     echo "${DOCKERHUB_USERNAME}"
      #   #   done
      #   env:
      #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "Set up Docker Buildx üê≥"
        uses: docker/setup-buildx-action@v3

      - name: "Build and Publish üèóÔ∏è"
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          file: ${{ github.workspace }}/${{ inputs.dockerfile }}
          context: ${{ github.workspace }}/${{ inputs.docker_context }}
